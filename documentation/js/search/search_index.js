var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionFilter.html",[0,0.107,1,1.859]],["body/classes/AllExceptionFilter.html",[0,0.054,1,1.499,2,0.534,3,0.31,4,0.31,5,0.274,6,2.514,7,1.242,8,1.714,9,3.062,10,0.388,11,1.185,12,4.116,13,2.438,14,2.438,15,3.062,16,3.511,17,0.955,18,1.513,19,1.499,20,0.041,21,1.327,22,0.86,23,1.499,24,4.649,25,1.185,26,2.438,27,1.513,28,0.627,29,3.062,30,1.513,31,1.063,32,0.433,33,3.062,34,1.063,35,1.883,36,1.513,37,1.513,38,0.31,39,2.859,40,1.063,41,1.513,42,1.513,43,1.242,44,1.513,45,2.438,46,3.511,47,1.513,48,1.513,49,2.438,50,3.511,51,1.513,52,1.513,53,1.513,54,2.438,55,1.513,56,1.714,57,1.513,58,1.513,59,1.513,60,1.513,61,1.513,62,1.513,63,1.513,64,1.513,65,2.438,66,1.513,67,1.513,68,1.513,69,1.513,70,1.513,71,1.513,72,1.513,73,1.513,74,1.242,75,1.513,76,2.438,77,2.438,78,2.001,79,1.513,80,1.242,81,1.513,82,1.513,83,1.513,84,1.513,85,1.327,86,1.513,87,1.513,88,0.017,89,0.017]],["title/classes/AppBaseController.html",[0,0.107,90,1.469]],["body/classes/AppBaseController.html",[0,0.131,1,2.861,2,1.305,3,0.757,4,0.757,5,0.67,20,0.039,28,0.952,32,1.057,38,0.757,88,0.032,89,0.032,90,2.261,91,2.013,92,3.035,93,3.697,94,3.697,95,3.697,96,3.697]],["title/controllers/AppController.html",[97,1.859,98,1.859]],["body/controllers/AppController.html",[0,0.099,3,0.57,4,0.57,5,0.505,10,0.715,11,1.874,17,1.091,20,0.038,25,1.353,28,0.978,31,1.957,32,0.796,38,0.57,85,1.516,88,0.026,89,0.026,97,2.372,98,2.372,99,1.957,100,2.286,101,3.633,102,3.922,103,1.957,104,2.784,105,2.784,106,3.166,107,2.784,108,2.784,109,2.784,110,1.957,111,2.712,112,3.166,113,2.286,114,2.784,115,2.784,116,2.151,117,2.286,118,2.286,119,2.286,120,2.784,121,2.784,122,2.784,123,2.286,124,2.784]],["title/modules/AppModule.html",[125,1.859,126,1.859]],["body/modules/AppModule.html",[0,0.095,3,0.547,4,0.547,5,0.485,20,0.037,28,1.1,32,0.765,38,0.547,88,0.026,89,0.026,98,2.663,99,2.636,110,1.88,111,1.88,116,2.491,117,2.195,125,2.306,126,3.151,127,1.456,128,2.306,129,2.195,130,2.195,131,3.079,132,2.195,133,1.88,134,2.674,135,3.079,136,2.674,137,2.674,138,2.674,139,1.644,140,1.88,141,2.674,142,2.195,143,2.195,144,1.456,145,2.306,146,2.674,147,2.674,148,2.195,149,2.674,150,2.674,151,2.674,152,2.674]],["title/injectables/AppService.html",[116,1.469,153,1.469]],["body/injectables/AppService.html",[0,0.121,3,0.697,4,0.697,5,0.617,10,0.874,11,2.145,17,1.334,20,0.039,25,1.655,28,0.697,32,0.974,38,0.697,85,1.854,88,0.03,89,0.03,102,4.255,116,2.145,123,2.795,153,2.145,154,2.393,155,2.795,156,3.405,157,2.404,158,3.405]],["title/classes/ChalkLogger.html",[0,0.107,159,2.125]],["body/classes/ChalkLogger.html",[0,0.061,2,0.61,3,0.354,4,0.354,5,0.313,10,0.444,11,1.317,17,1.611,19,2.528,20,0.039,21,2.239,22,1.451,23,2.528,25,1.998,28,0.555,31,2.35,32,0.494,38,0.354,40,3.899,74,3.375,78,2.224,88,0.018,89,0.018,157,2.981,159,1.905,160,3.581,161,1.418,162,1.475,163,2.71,164,2.71,165,2.71,166,2.71,167,2.71,168,1.728,169,3.581,170,4.111,171,2.71,172,3.785,173,1.728,174,2.71,175,1.728,176,2.71,177,1.728,178,2.71,179,1.728,180,2.224,181,1.728,182,1.728,183,1.728,184,1.728,185,1.728]],["title/classes/JoiValidationException.html",[0,0.107,35,1.859]],["body/classes/JoiValidationException.html",[0,0.104,2,1.038,3,0.602,4,0.602,5,0.533,17,1.152,19,1.808,20,0.04,21,1.601,22,1.038,23,1.808,28,0.602,32,0.841,35,2.462,38,0.602,88,0.027,89,0.027,157,2.874,162,2.18,169,3.287,186,3.287,187,2.413,188,4.553,189,2.413,190,4.004,191,3.738,192,3.437,193,2.94,194,2.94,195,2.94]],["title/guards/JwtAuthGuard.html",[196,2.125,197,2.125]],["body/guards/JwtAuthGuard.html",[0,0.092,3,0.529,4,0.529,5,0.469,8,1.818,10,0.664,11,1.78,17,1.436,19,2.252,20,0.039,21,1.995,22,1.293,23,2.252,25,1.257,28,0.75,32,0.74,38,0.529,39,1.59,40,1.818,43,2.123,85,1.408,88,0.025,89,0.025,101,3.492,106,3.007,118,2.123,119,2.123,139,1.59,153,1.78,189,2.123,197,2.575,198,2.587,199,3.492,200,2.123,201,4.626,202,2.587,203,4.162,204,2.587,205,3.663,206,4.626,207,2.587,208,2.587,209,1.59]],["title/injectables/MongooseConfigService.html",[145,1.859,153,1.469]],["body/injectables/MongooseConfigService.html",[0,0.094,3,0.544,4,0.544,5,0.482,8,1.869,10,0.683,11,1.815,17,1.464,20,0.04,22,0.939,25,1.292,28,0.884,32,0.76,38,0.544,85,1.448,88,0.025,89,0.025,103,1.869,113,3.545,139,1.635,144,1.448,145,2.297,153,1.815,154,1.869,203,4.2,209,1.635,210,3.545,211,2.183,212,2.297,213,4.318,214,4.683,215,2.659,216,4.318,217,2.659,218,3.736,219,2.659,220,2.659,221,2.659]],["title/classes/PrivateBaseController.html",[0,0.107,222,2.125]],["body/classes/PrivateBaseController.html",[0,0.132,2,1.315,3,0.763,4,0.763,5,0.676,20,0.036,28,0.957,38,0.763,88,0.032,89,0.032,90,2.483,91,2.029,162,2.546,222,3.287,223,3.059,224,3.059,225,2.619,226,2.619,227,3.059]],["title/classes/ProtectedBaseController.html",[0,0.107,228,2.125]],["body/classes/ProtectedBaseController.html",[0,0.132,2,1.315,3,0.763,4,0.763,5,0.676,20,0.036,28,0.957,38,0.763,88,0.032,89,0.032,90,2.483,91,2.029,162,2.546,224,3.059,225,2.619,226,2.619,227,3.059,228,3.287,229,3.059]],["title/classes/PublicBaseController.html",[0,0.107,230,2.125]],["body/classes/PublicBaseController.html",[0,0.135,2,1.347,3,0.781,4,0.781,5,0.692,20,0.038,28,0.781,38,0.781,88,0.032,89,0.032,90,2.51,91,2.078,162,2.584,226,2.683,230,3.337,231,3.133]],["title/classes/User.html",[0,0.107,232,1.646]],["body/classes/User.html",[0,0.077,2,0.77,3,0.447,4,0.447,5,0.396,10,0.56,17,1.674,20,0.039,22,1.833,28,0.663,38,0.79,39,1.341,80,3.507,88,0.022,89,0.022,103,3.003,144,1.188,157,2.768,209,1.341,212,1.991,232,2.102,233,2.485,234,1.341,235,3.861,236,3.861,237,3.861,238,3.861,239,4.272,240,2.181,241,2.181,242,2.181,243,2.181,244,4.563,245,2.276,246,2.181,247,2.658,248,2.658,249,1.791,250,2.181,251,4.272,252,1.341,253,1.791,254,1.791]],["title/modules/UserModule.html",[125,1.859,255,2.125]],["body/modules/UserModule.html",[0,0.117,3,0.677,4,0.677,5,0.6,20,0.04,21,1.802,28,0.989,32,0.946,38,0.677,88,0.029,89,0.029,99,2.327,125,2.665,127,1.802,135,2.717,143,2.717,144,1.802,148,2.717,232,1.802,233,1.802,245,2.327,252,2.665,255,3.046,256,3.31,257,3.31,258,3.31,259,3.31,260,3.31]],["title/coverage.html",[261,3.35]],["body/coverage.html",[0,0.178,1,1.282,5,0.378,6,1.712,7,1.712,20,0.039,22,0.736,35,1.282,56,1.466,88,0.021,89,0.021,90,1.013,91,2.275,92,1.712,97,1.282,98,1.282,100,1.712,116,1.013,140,1.466,145,1.282,153,1.521,155,1.712,159,1.466,160,1.712,161,1.712,186,1.712,187,1.712,196,1.466,197,1.466,199,1.712,200,1.712,210,1.712,211,1.712,222,1.466,223,1.712,228,1.466,229,1.712,230,1.466,231,1.712,232,1.136,233,1.705,234,1.925,252,1.282,261,1.712,262,1.712,263,2.085,264,2.085,265,1.466,266,1.466,267,4.177,268,5.612,269,5.13,270,3.758,271,3.758,272,2.085,273,2.57,274,1.712,275,1.712,276,1.712,277,2.085,278,1.712,279,2.085,280,2.085,281,2.085]],["title/dependencies.html",[128,2.228,282,2.091]],["body/dependencies.html",[20,0.04,32,0.896,34,2.203,88,0.028,89,0.028,110,2.203,111,2.939,112,2.573,128,1.927,139,1.927,144,1.707,180,2.573,225,2.203,247,2.573,283,3.134,284,4.704,285,3.134,286,3.134,287,3.134,288,3.134,289,3.134,290,4.181,291,3.134,292,3.134,293,3.134,294,3.134,295,3.134,296,3.134,297,3.134,298,3.134,299,3.134,300,3.134]],["title/miscellaneous/enumerations.html",[301,0.998,302,2.975]],["body/miscellaneous/enumerations.html",[10,0.815,20,0.039,88,0.029,89,0.029,265,2.233,266,3.329,301,1.245,302,2.608,303,4.218,304,3.463,305,4.218,306,4.218,307,4.592,308,3.176,309,2.608,310,4.218,311,3.176,312,3.176,313,3.463,314,3.463,315,4.218,316,4.218]],["title/miscellaneous/functions.html",[301,0.998,317,2.975]],["body/miscellaneous/functions.html",[10,1.085,20,0.034,88,0.034,89,0.034,276,3.468,278,4.434,301,1.656,317,3.468,318,4.225]],["title/index.html",[10,0.654,319,2.091,320,2.091]],["body/index.html",[20,0.032,88,0.032,89,0.032,245,2.599,321,4.653,322,4.653,323,4.653,324,3.697,325,4.653,326,3.697,327,3.697,328,3.697,329,3.697,330,3.697,331,3.697,332,3.697,333,3.697,334,3.697,335,3.697,336,3.697,337,3.697,338,3.697,339,3.697]],["title/license.html",[319,2.091,320,2.091,340,1.791]],["body/license.html",[20,0.024,34,1.689,88,0.024,89,0.024,133,1.689,262,1.973,340,1.689,341,2.403,342,4.082,343,2.403,344,2.403,345,2.403,346,2.403,347,3.475,348,2.403,349,2.403,350,2.403,351,2.403,352,2.403,353,2.403,354,3.475,355,5.323,356,2.403,357,2.403,358,2.403,359,4.082,360,2.403,361,3.475,362,2.403,363,2.403,364,3.475,365,2.403,366,2.403,367,2.403,368,2.403,369,2.403,370,2.403,371,2.403,372,3.475,373,2.403,374,2.403,375,2.403,376,2.403,377,2.403,378,2.403,379,2.403,380,3.475,381,3.475,382,2.403,383,2.403,384,2.403,385,2.403,386,2.403,387,2.403,388,2.403,389,2.403,390,2.403,391,2.403,392,2.403,393,2.403,394,2.403,395,2.403,396,2.403,397,2.403,398,2.403,399,2.403,400,2.403,401,2.403,402,2.403,403,2.403,404,2.403,405,2.403,406,2.403,407,2.403,408,2.403,409,2.403,410,2.403]],["title/modules.html",[127,2.222]],["body/modules.html",[20,0.034,88,0.034,89,0.034,126,2.552,127,2.26,255,2.918,411,4.151,412,4.151,413,4.151,414,4.997,415,4.151,416,4.151]],["title/overview.html",[417,3.35]],["body/overview.html",[2,1.275,20,0.034,88,0.031,89,0.031,97,2.221,116,2.448,126,3.258,127,1.967,128,2.819,129,2.966,130,2.966,131,3.764,132,2.966,133,2.539,154,2.539,196,2.539,417,2.966,418,4.585,419,4.585,420,3.612]],["title/properties.html",[212,2.228,282,2.091]],["body/properties.html",[20,0.039,88,0.034,89,0.034,192,2.892,212,2.53,340,2.892,421,4.115,422,4.115,423,4.115,424,4.115]],["title/miscellaneous/typealiases.html",[301,0.998,425,3.624]],["body/miscellaneous/typealiases.html",[10,1.066,20,0.034,22,1.465,88,0.034,89,0.034,233,2.26,234,2.552,248,3.407,249,4.102,301,1.627,426,4.151,427,3.407]],["title/miscellaneous/variables.html",[301,0.998,428,2.975]],["body/miscellaneous/variables.html",[10,0.488,20,0.04,22,0.671,39,2.45,56,1.337,88,0.02,89,0.02,140,2.052,142,2.396,157,1.589,191,1.561,192,1.337,209,2.45,232,1.035,233,1.035,234,1.169,252,1.794,253,1.561,254,1.561,265,1.337,266,2.052,273,1.561,274,2.396,275,2.916,301,0.745,304,1.561,307,3.271,309,1.561,313,1.561,314,1.561,427,1.561,428,1.561,429,2.918,430,3.984,431,1.901,432,1.901,433,1.901,434,2.918,435,2.918,436,1.901,437,1.901,438,1.901,439,2.918,440,2.918,441,1.901,442,1.901,443,1.901,444,1.901,445,2.918,446,2.918,447,1.901,448,1.901,449,1.901,450,2.918,451,1.901,452,1.901,453,2.918,454,1.901,455,1.901,456,2.918,457,1.901,458,1.901,459,1.901,460,1.901,461,2.918,462,1.901,463,1.901,464,1.901,465,1.901,466,1.901,467,1.901,468,1.901,469,1.901,470,3.552,471,3.552,472,1.901,473,1.901,474,3.552,475,1.901,476,1.901,477,1.901,478,1.901,479,1.901]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":422,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":279,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":419,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["17.9.1",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":418,"title":{},"body":{"overview.html":{}}}],["2.3.1",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":344,"title":{},"body":{"license.html":{}}}],["5.2.0",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":420,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":379,"title":{},"body":{"license.html":{}}}],["action",{"_index":404,"title":{},"body":{"license.html":{}}}],["action_text",{"_index":336,"title":{},"body":{"index.html":{}}}],["action_url",{"_index":337,"title":{},"body":{"index.html":{}}}],["addbearerauth(undefined",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addserver('http://180.148.214.178:4000",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addserver('http://localhost:4000",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addserver('https://gateway.futurenation.gov.bd/api",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionfilter",{"_index":1,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"coverage.html":{}}}],["and/or",{"_index":370,"title":{},"body":{"license.html":{}}}],["api",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":224,"title":{},"body":{"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{}}}],["apibearerauth('authorization",{"_index":227,"title":{},"body":{"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{}}}],["app",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.base.controller",{"_index":226,"title":{},"body":{"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{}}}],["app.controller",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_env",{"_index":313,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["appbasecontroller",{"_index":90,"title":{"classes/AppBaseController.html":{}},"body":{"classes/AppBaseController.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"coverage.html":{}}}],["appconfig",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":98,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appenvironment",{"_index":303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appmodule",{"_index":126,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":116,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["arising",{"_index":408,"title":{},"body":{"license.html":{}}}],["associated",{"_index":356,"title":{},"body":{"license.html":{}}}],["async",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts",{"_index":200,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:5",{"_index":204,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":207,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["author",{"_index":424,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":397,"title":{},"body":{"license.html":{}}}],["autoindex",{"_index":221,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["available",{"_index":416,"title":{},"body":{"modules.html":{}}}],["badrequestexception",{"_index":188,"title":{},"body":{"classes/JoiValidationException.html":{}}}],["body",{"_index":338,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browse",{"_index":414,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":411,"title":{},"body":{"modules.html":{}}}],["build",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c",{"_index":343,"title":{},"body":{"license.html":{}}}],["cache",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["cacheinterceptor",{"_index":109,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('name",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["cachekey('name')@useinterceptors(cacheinterceptor)@get",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["cachemodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["canactivate",{"_index":201,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":205,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["catch(exception",{"_index":14,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["chalk",{"_index":180,"title":{},"body":{"classes/ChalkLogger.html":{},"dependencies.html":{}}}],["chalklogger",{"_index":159,"title":{"classes/ChalkLogger.html":{}},"body":{"classes/ChalkLogger.html":{},"coverage.html":{}}}],["charge",{"_index":351,"title":{},"body":{"license.html":{}}}],["claim",{"_index":400,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{}},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["collection",{"_index":250,"title":{},"body":{"classes/User.html":{}}}],["conditions",{"_index":378,"title":{},"body":{"license.html":{}}}],["config",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["config.service",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["config.service.ts",{"_index":211,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":217,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["config.service.ts:13",{"_index":215,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["config.ts",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["configkey",{"_index":305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(appconfig",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":203,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{}}}],["connection",{"_index":409,"title":{},"body":{"license.html":{}}}],["console.error('exception",{"_index":82,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["console.log(e",{"_index":66,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["const",{"_index":39,"title":{},"body":{"classes/AllExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":189,"title":{},"body":{"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{}}}],["constructor(configservice",{"_index":202,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(objectorerror",{"_index":190,"title":{},"body":{"classes/JoiValidationException.html":{}}}],["constructor(private",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtAuthGuard.html":{}}}],["context",{"_index":40,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{},"guards/JwtAuthGuard.html":{}}}],["context.getrequest",{"_index":44,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["context.getresponse",{"_index":42,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["context.switchtohttp().getrequest",{"_index":208,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["contract",{"_index":405,"title":{},"body":{"license.html":{}}}],["control:focus",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":97,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllerkey",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["controllers/app.base.controller.ts",{"_index":92,"title":{},"body":{"classes/AppBaseController.html":{},"coverage.html":{}}}],["controllers/private.base.controller.ts",{"_index":223,"title":{},"body":{"classes/PrivateBaseController.html":{},"coverage.html":{}}}],["controllers/protected.base.controller.ts",{"_index":229,"title":{},"body":{"classes/ProtectedBaseController.html":{},"coverage.html":{}}}],["controllers/public.base.controller.ts",{"_index":231,"title":{},"body":{"classes/PublicBaseController.html":{},"coverage.html":{}}}],["copies",{"_index":372,"title":{},"body":{"license.html":{}}}],["copy",{"_index":354,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":342,"title":{},"body":{"license.html":{}}}],["core/config/app",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["core/libs/mongoose/mongoose",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":261,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createmongooseoptions",{"_index":214,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["customcss",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customoptions",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":401,"title":{},"body":{"license.html":{}}}],["date().toisostring",{"_index":71,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["deal",{"_index":358,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":410,"title":{},"body":{"license.html":{}}}],["debug",{"_index":163,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["debug(message",{"_index":167,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["decorators",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{}}}],["default",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{}}}],["dependencies",{"_index":128,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":192,"title":{},"body":{"classes/JoiValidationException.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":309,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":368,"title":{},"body":{"license.html":{}}}],["document",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":262,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentbuilder",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":65,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["email",{"_index":235,"title":{},"body":{"classes/User.html":{}}}],["enumerations",{"_index":302,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":78,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{}}}],["error(message",{"_index":171,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["errors",{"_index":50,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["errors[fieldname",{"_index":63,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["errors[fieldname].push(message",{"_index":64,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["event",{"_index":396,"title":{},"body":{"license.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter",{"_index":95,"title":{},"body":{"classes/AppBaseController.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:15",{"_index":18,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:71",{"_index":27,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getresponse",{"_index":51,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":47,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.response?.message",{"_index":87,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.tostring",{"_index":84,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptions/joi",{"_index":36,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["executioncontext",{"_index":206,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["explorer",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":38,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["exports",{"_index":260,"title":{},"body":{"modules/UserModule.html":{}}}],["express",{"_index":34,"title":{},"body":{"classes/AllExceptionFilter.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":162,"title":{},"body":{"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{}}}],["fieldname",{"_index":60,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["files",{"_index":357,"title":{},"body":{"license.html":{}}}],["filters/all",{"_index":94,"title":{},"body":{"classes/AppBaseController.html":{}}}],["fitness",{"_index":392,"title":{},"body":{"license.html":{}}}],["following",{"_index":377,"title":{},"body":{"license.html":{}}}],["foreach((message",{"_index":53,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["free",{"_index":350,"title":{},"body":{"license.html":{}}}],["fs.writefilesync('./public/swagger",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full_name",{"_index":236,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":317,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":375,"title":{},"body":{"license.html":{}}}],["geterrormessage",{"_index":13,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["geterrormessage(exception",{"_index":26,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["gethello",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":319,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":349,"title":{},"body":{"license.html":{}}}],["graph",{"_index":415,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":196,"title":{"guards/JwtAuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":198,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["hello",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["hereby",{"_index":348,"title":{},"body":{"license.html":{}}}],["holders",{"_index":398,"title":{},"body":{"license.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":41,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpexception",{"_index":29,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["https://validator.swagger.io/validator",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":30,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":69,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":48,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["hydrateddocument",{"_index":248,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["icon",{"_index":335,"title":{},"body":{"index.html":{}}}],["id",{"_index":328,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionFilter.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{}}}],["implied",{"_index":388,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["imports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["included",{"_index":382,"title":{},"body":{"license.html":{}}}],["including",{"_index":361,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["inject",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/MongooseConfigService.html":{}}}],["injectable",{"_index":153,"title":{"injectables/AppService.html":{},"injectables/MongooseConfigService.html":{}},"body":{"injectables/AppService.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["injectables",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"injectables/MongooseConfigService.html":{},"overview.html":{}}}],["instanceof",{"_index":46,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internal",{"_index":76,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ioredis",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["is_read",{"_index":339,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["joi.object",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joivalidationexception",{"_index":35,"title":{"classes/JoiValidationException.html":{}},"body":{"classes/AllExceptionFilter.html":{},"classes/JoiValidationException.html":{},"coverage.html":{}}}],["json.stringify(document",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":197,"title":{"guards/JwtAuthGuard.html":{}},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["kind",{"_index":387,"title":{},"body":{"license.html":{}}}],["liability",{"_index":402,"title":{},"body":{"license.html":{}}}],["liable",{"_index":399,"title":{},"body":{"license.html":{}}}],["license",{"_index":340,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":362,"title":{},"body":{"license.html":{}}}],["limited",{"_index":389,"title":{},"body":{"license.html":{}}}],["local",{"_index":306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log",{"_index":164,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["log(message",{"_index":174,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["logger",{"_index":31,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"classes/ChalkLogger.html":{}}}],["logger.error('exception",{"_index":49,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["logger.warn('hello",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["logger/chalk.logger.ts",{"_index":161,"title":{},"body":{"classes/ChalkLogger.html":{},"coverage.html":{}}}],["logger/chalk.logger.ts:13",{"_index":168,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["logger/chalk.logger.ts:17",{"_index":177,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["logger/chalk.logger.ts:21",{"_index":175,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["logger/chalk.logger.ts:5",{"_index":173,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["logger/chalk.logger.ts:9",{"_index":179,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["manager",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["matches",{"_index":58,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["matches[0].replace",{"_index":61,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["matching",{"_index":89,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":391,"title":{},"body":{"license.html":{}}}],["merge",{"_index":366,"title":{},"body":{"license.html":{}}}],["message",{"_index":74,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{}}}],["metadata",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["methodkey",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methodkey}`.tolowercase",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{}}}],["miscellaneous",{"_index":301,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":341,"title":{},"body":{"license.html":{}}}],["model",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":365,"title":{},"body":{"license.html":{}}}],["module",{"_index":125,"title":{"modules/AppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["module/schemas/user.schema.ts",{"_index":234,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module/schemas/user.schema.ts:12",{"_index":243,"title":{},"body":{"classes/User.html":{}}}],["module/schemas/user.schema.ts:15",{"_index":240,"title":{},"body":{"classes/User.html":{}}}],["module/schemas/user.schema.ts:18",{"_index":242,"title":{},"body":{"classes/User.html":{}}}],["module/schemas/user.schema.ts:9",{"_index":241,"title":{},"body":{"classes/User.html":{}}}],["module/user.module.ts",{"_index":256,"title":{},"body":{"modules/UserModule.html":{}}}],["modules",{"_index":127,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":324,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":327,"title":{},"body":{"index.html":{}}}],["mongodb_uri",{"_index":314,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":247,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["mongoose.schema.types.string",{"_index":251,"title":{},"body":{"classes/User.html":{}}}],["mongooseconfigservice",{"_index":145,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["mongoosemodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":258,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleoptions",{"_index":216,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":218,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"modules/UserModule.html":{}}}],["nation",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestexpressapplication",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestjs",{"_index":323,"title":{},"body":{"index.html":{}}}],["nestjs/cache",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":225,"title":{},"body":{"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"dependencies.html":{}}}],["new",{"_index":56,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":395,"title":{},"body":{"license.html":{}}}],["notice",{"_index":380,"title":{},"body":{"license.html":{}}}],["notification",{"_index":321,"title":{},"body":{"index.html":{}}}],["notification_channel",{"_index":331,"title":{},"body":{"index.html":{}}}],["object",{"_index":191,"title":{},"body":{"classes/JoiValidationException.html":{},"miscellaneous/variables.html":{}}}],["objectorerror",{"_index":194,"title":{},"body":{"classes/JoiValidationException.html":{}}}],["obtaining",{"_index":353,"title":{},"body":{"license.html":{}}}],["opblock",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationidfactory",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{}}}],["options",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["otherwise",{"_index":407,"title":{},"body":{"license.html":{}}}],["out",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner_id",{"_index":329,"title":{},"body":{"index.html":{}}}],["owner_type",{"_index":330,"title":{},"body":{"index.html":{}}}],["package",{"_index":282,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{}}}],["particular",{"_index":393,"title":{},"body":{"license.html":{}}}],["password",{"_index":237,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":72,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["permission",{"_index":347,"title":{},"body":{"license.html":{}}}],["permit",{"_index":373,"title":{},"body":{"license.html":{}}}],["persistauthorization",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":352,"title":{},"body":{"license.html":{}}}],["persons",{"_index":374,"title":{},"body":{"license.html":{}}}],["portions",{"_index":384,"title":{},"body":{"license.html":{}}}],["private",{"_index":213,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["privatebasecontroller",{"_index":222,"title":{"classes/PrivateBaseController.html":{}},"body":{"classes/PrivateBaseController.html":{},"coverage.html":{}}}],["prod",{"_index":311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promise",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtAuthGuard.html":{}}}],["prop",{"_index":244,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":239,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":212,"title":{"properties.html":{}},"body":{"injectables/MongooseConfigService.html":{},"classes/User.html":{},"properties.html":{}}}],["protectedbasecontroller",{"_index":228,"title":{"classes/ProtectedBaseController.html":{}},"body":{"classes/ProtectedBaseController.html":{},"coverage.html":{}}}],["provided",{"_index":385,"title":{},"body":{"license.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["publicbasecontroller",{"_index":230,"title":{"classes/PublicBaseController.html":{}},"body":{"classes/PublicBaseController.html":{},"coverage.html":{}}}],["publish",{"_index":367,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":394,"title":{},"body":{"license.html":{}}}],["rabbitmq",{"_index":325,"title":{},"body":{"index.html":{}}}],["re",{"_index":55,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["re.exec(message",{"_index":59,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["readonly",{"_index":119,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtAuthGuard.html":{}}}],["redis_host",{"_index":315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["redis_port",{"_index":316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["regexp('(^\\\\\"\\\\w",{"_index":57,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["render",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["replace",{"_index":62,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["request",{"_index":43,"title":{},"body":{"classes/AllExceptionFilter.html":{},"guards/JwtAuthGuard.html":{}}}],["request.url",{"_index":73,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["reset",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":33,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["response.message",{"_index":52,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["response.status(status).json(responseobject",{"_index":86,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["responseobject",{"_index":67,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["responseobject.dev_note",{"_index":83,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["responseobject.errors",{"_index":81,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["restriction",{"_index":360,"title":{},"body":{"license.html":{}}}],["results",{"_index":88,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry_count",{"_index":333,"title":{},"body":{"index.html":{}}}],["return",{"_index":85,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{}}}],["rights",{"_index":363,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":245,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"index.html":{}}}],["schemafactory",{"_index":246,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user).set",{"_index":253,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/user.schema",{"_index":257,"title":{},"body":{"modules/UserModule.html":{}}}],["sell",{"_index":371,"title":{},"body":{"license.html":{}}}],["server",{"_index":77,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["service",{"_index":322,"title":{},"body":{"index.html":{}}}],["setdescription('future",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('future",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setversion('v1.0.0",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":381,"title":{},"body":{"license.html":{}}}],["software",{"_index":355,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/AppBaseController.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["spec.json",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":304,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":427,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/@core/config/app",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/@core/etc",{"_index":91,"title":{},"body":{"classes/AppBaseController.html":{},"classes/PrivateBaseController.html":{},"classes/ProtectedBaseController.html":{},"classes/PublicBaseController.html":{},"coverage.html":{}}}],["src/@core/exceptions/joi",{"_index":186,"title":{},"body":{"classes/JoiValidationException.html":{},"coverage.html":{}}}],["src/@core/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/@core/guards/jwt",{"_index":199,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/@core/libs/chalk",{"_index":160,"title":{},"body":{"classes/ChalkLogger.html":{},"coverage.html":{}}}],["src/@core/libs/mongoose/mongoose",{"_index":210,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["src/@core/libs/swagger/swagger.ts",{"_index":273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user",{"_index":233,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":320,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":264,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":45,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["string",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":376,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":369,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":383,"title":{},"body":{"license.html":{}}}],["summary",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super(objectorerror",{"_index":195,"title":{},"body":{"classes/JoiValidationException.html":{}}}],["super.debug(chalk.cyan(message",{"_index":183,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["super.error(chalk.red(message",{"_index":181,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["super.log(chalk.green(message",{"_index":185,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["super.verbose(chalk.magenta(message",{"_index":184,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["super.warn(chalk.yellow(message",{"_index":182,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["support",{"_index":412,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":413,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggercustomcss",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggercustomoptions",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggerdocumentoptions",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["tech",{"_index":345,"title":{},"body":{"license.html":{}}}],["template_id",{"_index":334,"title":{},"body":{"index.html":{}}}],["testing",{"_index":310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.appservice.gethello",{"_index":124,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('mongodb_uri",{"_index":220,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["this.geterrormessage(exception",{"_index":75,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["timestamp",{"_index":70,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["timestamps",{"_index":254,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":406,"title":{},"body":{"license.html":{}}}],["trace",{"_index":172,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["true",{"_index":209,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":54,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["twig",{"_index":346,"title":{},"body":{"license.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{},"guards/JwtAuthGuard.html":{},"injectables/MongooseConfigService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":425,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":79,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ui",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":80,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/User.html":{}}}],["unlicensed",{"_index":423,"title":{},"body":{"properties.html":{}}}],["uri",{"_index":219,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["use",{"_index":364,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["usefilters",{"_index":93,"title":{},"body":{"classes/AppBaseController.html":{}}}],["usefilters(new",{"_index":96,"title":{},"body":{"classes/AppBaseController.html":{}}}],["useinterceptors",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":232,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.name",{"_index":259,"title":{},"body":{"modules/UserModule.html":{}}}],["userdocument",{"_index":249,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule",{"_index":255,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{}}}],["username",{"_index":238,"title":{},"body":{"classes/User.html":{}}}],["userschema",{"_index":252,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":326,"title":{},"body":{"index.html":{}}}],["valid_till_at",{"_index":332,"title":{},"body":{"index.html":{}}}],["validation.exception",{"_index":37,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validation.exception.ts",{"_index":187,"title":{},"body":{"classes/JoiValidationException.html":{},"coverage.html":{}}}],["validation.exception.ts:3",{"_index":193,"title":{},"body":{"classes/JoiValidationException.html":{}}}],["validationschema",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validatorurl",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value",{"_index":307,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":428,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose",{"_index":165,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["verbose(message",{"_index":176,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["version",{"_index":421,"title":{},"body":{"properties.html":{}}}],["void",{"_index":170,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["warn",{"_index":166,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["warn(message",{"_index":178,"title":{},"body":{"classes/ChalkLogger.html":{}}}],["warranties",{"_index":390,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":386,"title":{},"body":{"license.html":{}}}],["whether",{"_index":403,"title":{},"body":{"license.html":{}}}],["without",{"_index":359,"title":{},"body":{"license.html":{}}}],["world",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["yes",{"_index":169,"title":{},"body":{"classes/ChalkLogger.html":{},"classes/JoiValidationException.html":{}}}],["zoom",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                getErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/filters/all-exception.filter.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(exception: any)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/filters/all-exception.filter.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n  Logger,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { JoiValidationException } from '../exceptions/joi-validation.exception';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const context = host.switchToHttp();\n    const response = context.getResponse();\n    const request = context.getRequest();\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    Logger.error('exception', exception);\n\n    let errors: any;\n\n    if (exception instanceof JoiValidationException) {\n      errors = {};\n      const response: any = exception.getResponse();\n      (response.message || []).forEach((message) => {\n        try {\n          const re = new RegExp('(^\\\\\"\\\\w+\\\\\")');\n          const matches = re.exec(message);\n          const fieldName = matches[0].replace('\"', '').replace('\"', '');\n          errors[fieldName] = [];\n          errors[fieldName].push(message);\n        } catch (e) {\n          console.log(e);\n        }\n      });\n    }\n\n    const responseObject: any = {\n      statusCode:\n        exception instanceof JoiValidationException\n          ? HttpStatus.BAD_REQUEST\n          : status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message:\n        exception instanceof HttpException\n          ? this.getErrorMessage(exception)\n          : 'Internal server error',\n    };\n\n    if (typeof errors != 'undefined') {\n      responseObject.errors = errors;\n    }\n\n    Logger.error('exception', exception);\n    console.error('exception', exception);\n\n    try {\n      responseObject.dev_note = exception.toString();\n    } catch (e) {}\n\n    return response.status(status).json(responseObject);\n  }\n\n  getErrorMessage(exception: any) {\n    return exception.response?.message || 'Internal server error';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppBaseController.html":{"url":"classes/AppBaseController.html","title":"class - AppBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/etc-controllers/app.base.controller.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UseFilters } from '@nestjs/common';\n\nimport { AllExceptionFilter } from '../filters/all-exception.filter';\n\n@UseFilters(new AllExceptionFilter())\nexport class AppBaseController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CacheKey('name')@UseInterceptors(CacheInterceptor)@Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {CACHE_MANAGER, CacheKey, CacheInterceptor} from '@nestjs/cache-manager';\nimport {Cache} from \"cache-manager\";\nimport {Controller, Get, Inject, Logger, Render, UseInterceptors} from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @CacheKey('name')\n  @UseInterceptors(CacheInterceptor)\n  @Get()\n  async getHello(): Promise {\n    Logger.warn('Hello World')\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {Module} from '@nestjs/common';\nimport {AppController} from './app.controller';\nimport {AppService} from './app.service';\nimport {CacheModule} from \"@nestjs/cache-manager\";\nimport {ConfigModule} from \"@nestjs/config\";\nimport {appConfig} from \"./@core/config/app-config\";\nimport {MongooseModule} from \"@nestjs/mongoose\";\nimport {MongooseConfigService} from './@core/libs/mongoose/mongoose-config.service';\n\n@Module({\n    imports: [\n        CacheModule.register(),\n        ConfigModule.forRoot(appConfig),\n        MongooseModule.forRootAsync({\n            useClass: MongooseConfigService,\n        }),\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChalkLogger.html":{"url":"classes/ChalkLogger.html","title":"class - ChalkLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChalkLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/libs/chalk-logger/chalk.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/chalk-logger/chalk.logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/chalk-logger/chalk.logger.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/chalk-logger/chalk.logger.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/chalk-logger/chalk.logger.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/chalk-logger/chalk.logger.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport chalk from 'chalk';\n\nexport class ChalkLogger extends Logger {\n    error(message: any, trace?: string, context?: string) {\n        super.error(chalk.red(message), trace, context);\n    }\n\n    warn(message: any, context?: string) {\n        super.warn(chalk.yellow(message), context);\n    }\n\n    debug(message: any, context?: string) {\n        super.debug(chalk.cyan(message), context);\n    }\n\n    verbose(message: any, context?: string) {\n        super.verbose(chalk.magenta(message), context);\n    }\n\n    log(message: any, context?: string) {\n        super.log(chalk.green(message), context);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoiValidationException.html":{"url":"classes/JoiValidationException.html","title":"class - JoiValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoiValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/exceptions/joi-validation.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(objectOrError?: string | object | any, description?: string)\n                    \n                \n                        \n                            \n                                Defined in src/@core/exceptions/joi-validation.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objectOrError\n                                                  \n                                                        \n                                                                    string | object | any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\n\nexport class JoiValidationException extends BadRequestException {\n  constructor(objectOrError?: string | object | any, description?: string) {\n    super(objectOrError, description);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/@core/guards/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/@core/guards/jwt-auth.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/@core/guards/jwt-auth.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n  constructor(private readonly configService: ConfigService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/libs/mongoose/mongoose-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/@core/libs/mongoose/mongoose-config.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/@core/libs/mongoose/mongoose-config.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  MongooseModuleOptions,\n  MongooseOptionsFactory,\n} from '@nestjs/mongoose';\n\n@Injectable()\nexport class MongooseConfigService implements MongooseOptionsFactory {\n  @Inject()\n  private configService: ConfigService;\n\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: this.configService.get('MONGODB_URI'),\n      autoIndex: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrivateBaseController.html":{"url":"classes/PrivateBaseController.html","title":"class - PrivateBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrivateBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/etc-controllers/private.base.controller.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AppBaseController\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiBearerAuth} from '@nestjs/swagger';\nimport {AppBaseController} from './app.base.controller';\n\n@ApiBearerAuth('Authorization')\nexport class PrivateBaseController extends AppBaseController {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProtectedBaseController.html":{"url":"classes/ProtectedBaseController.html","title":"class - ProtectedBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProtectedBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/etc-controllers/protected.base.controller.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AppBaseController\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiBearerAuth} from '@nestjs/swagger';\nimport {AppBaseController} from './app.base.controller';\n\n@ApiBearerAuth('Authorization')\nexport class ProtectedBaseController extends AppBaseController {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublicBaseController.html":{"url":"classes/PublicBaseController.html","title":"class - PublicBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/@core/etc-controllers/public.base.controller.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AppBaseController\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AppBaseController } from './app.base.controller';\n\nexport class PublicBaseController extends AppBaseController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-module/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                full_name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-module/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        full_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-module/schemas/user.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-module/schemas/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user-module/schemas/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ collection: 'user' })\nexport class User {\n  @Prop({ type: mongoose.Schema.Types.String})\n  full_name: string;\n\n  @Prop({ type: mongoose.Schema.Types.String})\n  username: string;\n\n  @Prop({ type: mongoose.Schema.Types.String})\n  email: string;\n\n  @Prop({ type: mongoose.Schema.Types.String})\n  password: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User).set(\n  'timestamps',\n  true,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-module/user.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {Module} from \"@nestjs/common\";\nimport {MongooseModule} from \"@nestjs/mongoose\";\nimport {User, UserSchema} from \"./schemas/user.schema\";\n\n\n@Module({\n   imports: [\n      MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n   ],\n   controllers: [],\n   providers: [],\n   exports: [],\n})\nexport class UserModule {\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/@core/config/app-config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/etc-controllers/app.base.controller.ts\n            \n            class\n            AppBaseController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/etc-controllers/private.base.controller.ts\n            \n            class\n            PrivateBaseController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/etc-controllers/protected.base.controller.ts\n            \n            class\n            ProtectedBaseController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/etc-controllers/public.base.controller.ts\n            \n            class\n            PublicBaseController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/exceptions/joi-validation.exception.ts\n            \n            class\n            JoiValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/@core/filters/all-exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@core/guards/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@core/libs/chalk-logger/chalk.logger.ts\n            \n            class\n            ChalkLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/@core/libs/mongoose/mongoose-config.service.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/@core/libs/swagger/swagger.ts\n            \n            variable\n            setupSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/@core/libs/swagger/swagger.ts\n            \n            variable\n            swaggerCustomCss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user-module/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user-module/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^1.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            cache-manager : ^5.2.0\n        \n            chalk : ^5.2.0\n        \n            ioredis : ^5.3.1\n        \n            joi : ^17.9.1\n        \n            mongoose : ^7.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppEnvironment   (src/.../app-config.ts)\n                        \n                        \n                            ConfigKey   (src/.../app-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/@core/config/app-config.ts\n    \n        \n            \n                \n                    \n                        \n                        AppEnvironment\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : LOCAL\n                            \n                        \n                        \n                            \n                                 STAGE\n                            \n                        \n                        \n                            \n                                Value : DEV\n                            \n                        \n                        \n                            \n                                 TESTING\n                            \n                        \n                        \n                            \n                                Value : TESTING\n                            \n                        \n                        \n                            \n                                 PROD\n                            \n                        \n                        \n                            \n                                Value : PRODUCTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ConfigKey\n                    \n                \n                        \n                            \n                                 APP_ENV\n                            \n                        \n                        \n                            \n                                Value : APP_ENV\n                            \n                        \n                        \n                            \n                                 MONGODB_URI\n                            \n                        \n                        \n                            \n                                Value : MONGODB_URI\n                            \n                        \n                        \n                            \n                                 REDIS_HOST\n                            \n                        \n                        \n                            \n                                Value : REDIS_HOST\n                            \n                        \n                        \n                            \n                                 REDIS_PORT\n                            \n                        \n                        \n                            \n                                Value : REDIS_PORT\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nnotification-service-nestjs-mongo-rabbitmq\nA notification service using Nestjs, Mongodb and RabbitMQ\nschema\nid\nowner_id\nowner_type\nnotification_channel\nvalid_till_at\nretry_count\ntemplate_id\nicon\naction_text\naction_url\nbody\nis_read\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Tech Twig\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user-module/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app-config.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                        \n                            swaggerCustomCss   (src/.../swagger.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/@core/config/app-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isGlobal: true,\n  validationSchema: Joi.object({\n    APP_ENV: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/@core/libs/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: NestExpressApplication) => {\n  const config = new DocumentBuilder()\n    .setTitle('Future Nation API')\n    .setDescription('Future Nation API description')\n    .setVersion('v1.0.0')\n    .addServer('http://localhost:4000')\n    .addServer('http://180.148.214.178:4000')\n    .addServer('https://gateway.futurenation.gov.bd/api')\n    .addServer('https://gateway.futurenation.gov.bd/api-dev')\n    .addBearerAuth(undefined, 'User-Token')\n    .addBearerAuth(undefined, 'Authorization')\n    .build();\n\n  const options: SwaggerDocumentOptions = {\n    operationIdFactory: (controllerKey: string, methodKey: string) =>\n      `${controllerKey}-${methodKey}`.toLowerCase(),\n  };\n\n  const document = SwaggerModule.createDocument(app, config, options);\n  fs.writeFileSync('./public/swagger-spec.json', JSON.stringify(document));\n\n  const customOptions: SwaggerCustomOptions = {\n    customCss: swaggerCustomCss,\n    // explorer: true,\n    swaggerOptions: {\n      persistAuthorization: true,\n      validatorUrl: 'https://validator.swagger.io/validator',\n    },\n  };\n\n  SwaggerModule.setup('api', app, document, customOptions);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        swaggerCustomCss\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n.swagger-ui .model-box-control:focus, .swagger-ui .models-control:focus, .swagger-ui .opblock-summary-control:focus {\n  outline: none\n}\n`\n                    \n                \n\n\n        \n    \n\n    src/user-module/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User).set(\n  'timestamps',\n  true,\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
